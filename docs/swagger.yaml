definitions:
  auth_model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth_model.LoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  auth_model.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  common_model.ApiError:
    properties:
      content:
        description: Additional information about the error provided by the service
          that generated it. E. g. if an ORM returns an error, it will be propagated
          here as the raw error.
      context:
        description: Information about where the error occurred. E. g. the name of
          the package that returned the error.
        type: string
      description:
        description: Description of the error generated by a.DescriptiveError.Error()
        type: string
      message:
        description: Short text describing the error as best as we can for humans.
        type: string
    type: object
  common_model.RequiredId:
    properties:
      id:
        description: The unique identifier.
        type: string
    type: object
  database_model.DateOrderEnum:
    enum:
    - asc
    - desc
    type: string
    x-enum-varnames:
    - Asc
    - Desc
  fiber.Map:
    additionalProperties: true
    type: object
  user_entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  user_model.Create:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  user_model.UpdateWithId:
    properties:
      email:
        type: string
      id:
        description: The unique identifier.
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  user_model.UpdateWithPassword:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: Template to use in your challenge
  title: Core API template
  version: "1.0"
paths:
  /user:
    delete:
      consumes:
      - application/json
      description: Deletes a user by their ID (only accessible by admins). You cannot
        delete su@user
      parameters:
      - description: User ID to delete
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common_model.RequiredId'
      produces:
      - application/json
      responses:
        "204":
          description: User deleted successfully
      security:
      - ApiKeyAuth: []
      summary: Delete user by ID
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns a paginated list of users
      parameters:
      - default: desc
        enum:
        - asc
        - desc
        in: query
        name: created_at
        type: string
        x-enum-varnames:
        - Asc
        - Desc
      - in: query
        name: created_at_geq
        type: string
      - in: query
        name: created_at_leq
        type: string
      - in: query
        name: email
        type: string
      - description: The unique identifier
        in: query
        name: id
        type: string
      - default: 10
        description: Number of items to return
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - default: 0
        description: The offset from where to start the items
        in: query
        name: offset
        type: integer
      - in: query
        name: role
        type: string
      - default: desc
        enum:
        - asc
        - desc
        in: query
        name: updated_at
        type: string
        x-enum-varnames:
        - Asc
        - Desc
      - in: query
        name: updated_at_geq
        type: string
      - in: query
        name: updated_at_leq
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/user_entity.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get users paginated
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user_model.Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created user
          schema:
            $ref: '#/definitions/user_entity.User'
      summary: Creates a new user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates a user's details by their ID (accessible by superuser)
      parameters:
      - description: User data to update
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_model.UpdateWithId'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/common_model.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Update user by ID
      tags:
      - User
  /user/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using a refresh token.
      parameters:
      - description: Refresh token data
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/auth_model.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Refresh successful
          schema:
            $ref: '#/definitions/auth_model.LoginResponse'
      summary: Refresh Access Token
      tags:
      - Auth
  /user/auth/token:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens.
      parameters:
      - description: Login data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth_model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/auth_model.LoginResponse'
      summary: Login
      tags:
      - Auth
  /user/me:
    delete:
      description: Deletes the user who made the request
      responses:
        "204":
          description: User deleted successfully
      security:
      - ApiKeyAuth: []
      summary: Delete current user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Current user
          schema:
            $ref: '#/definitions/user_entity.User'
      security:
      - ApiKeyAuth: []
      summary: Gets current user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the details of the user who made the request
      parameters:
      - description: User data to update
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_model.UpdateWithPassword'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/fiber.Map'
      security:
      - ApiKeyAuth: []
      summary: Update current user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
